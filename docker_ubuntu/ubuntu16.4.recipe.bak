Bootstrap: docker
OSVersion: ubuntu:16.4



%help
	Cuda 9.0
	cuDNN 7.1.4.18-1
	Python 2.7.12
	Python 3.5.2
	TensorFlow Version 10.1 with GPU support

%labels
	Maintainer ITSC
	Version v1.0

%environment

	#Environment variables
	
	#Use bash as default shell
	#SHELL=/bin/bash

	#Add CUDA paths
	#CPATH="/usr/local/cuda/include:$CPATH"
	#PATH="/usr/local/cuda/bin:$PATH"
	#LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
	#CUDA_HOME="/usr/local/cuda"

	#Add Anaconda path
	#PATH="/usr/local/anaconda3-4.2.0/bin:$PATH"

	#export PATH LD_LIBRARY_PATH CPATH CUDA_HOME

%setup

%post
	apt-get update
	apt-get install -y wget git vim	
	apt-get install -y python-pip python-dev python3-pip python3-dev python-virtualenv


	# Adds NVIDIA package repository.
	apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
	wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb
	wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb
	dpkg -i cuda-repo-ubuntu1604_9.1.85-1_amd64.deb
	dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb
	apt-get update
	# Includes optional NCCL 2.x.
	apt-get install cuda9.0 cuda-cublas-9-0 cuda-cufft-9-0 cuda-curand-9-0 \
		cuda-cusolver-9-0 cuda-cusparse-9-0 libcudnn7=7.1.4.18-1+cuda9.0 \
		libnccl2=2.2.13-1+cuda9.0 cuda-command-line-tools-9-0
	# Optionally install TensorRT runtime, must be done after above cuda install.
	apt-get update
	apt-get install libnvinfer4=4.1.2-1+cuda9.0

	

	# Install necessary packages
	apt-get update && apt-get install -y --no-install-recommends \
		build-essential \
		gcc-multilib \
		libatlas-base-dev \
		libboost-all-dev \
		libhdf5-serial-dev \
		libprotobuf-dev \
		protobuf-compiler \
		libopenblas-dev \
		liblapack-dev \
		gfortran \
		libcurl4-openssl-dev \
		pkg-config \
		python-setuptools \
		python3-setuptools
	apt-get clean

	# Update pip
	pip install --no-cache-dir --upgrade pip==9.0.1
	pip3 install --no-cache-dir --upgrade pip==9.0.1

	# Install TensorFlow-GPU
        export TF_BINARY_GPU_27_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl
        export TF_BINARY_CPU_27_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.10.0-cp27-none-linux_x86_64.whl
        pip install --no-cache-dir --ignore-installed --upgrade $TF_BINARY_GPU_27_URL	

	# Install python packages
	pip install --upgrade keras tflearn numpy nibabel h5py scikit-learn pandas scipy matplotlib ipykernel jupyter

	# Install TensorFlow-GPU
        export TF_BINARY_GPU_35_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp35-cp35m-linux_x86_64.whl
        export TF_BINARY_CPU_35_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.10.0-cp35-cp35m-linux_x86_64.whl
        pip3 install --no-cache-dir --ignore-installed --upgrade $TF_BINARY_GPU_35_URL

	# Install python packages
	pip3 install --upgrade keras tflearn numpy nibabel h5py scikit-learn pandas scipy matplotlib ipykernel jupyter

